@mixin clear-fix() {
  content: "";
  display: table;
  clear: both;
}

@mixin box($x, $y:false) {
  width: $x;
  height: $x;
  @if($y) {
    height: $y;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

$image-path: '../img' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
  background-image: url(#{$image-path}/#{$name}.svg);
  @if($size){
    background-size: $size;
  }
  .no-svg &{
    background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

    @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
      background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
    }
  }
}

@mixin bp-large {
  @media only screen and (min-width: 1260px) {
    @content;
  }
}

@mixin bp-medium {
  @media only screen and (min-width: 960px) {
    @content;
  }
}

@mixin bp-small {
  @media only screen and (min-width: 480px) {
    @content;
  }
}

@mixin animate($args...) {
  -webkit-animation: $args;        /* Safari 4+ */
  -moz-animation:    $args;        /* Fx 5+ */
  -o-animation:      $args;        /* Opera 12+ */
  animation:         $args;        /* IE 10+, Fx 29+ */
}